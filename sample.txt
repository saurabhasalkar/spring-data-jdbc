// imports
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

@Service
public class WorkFlowInstanceService {

    private final WorkflowExecutionRepository workflowExecutionRepository;

    public WorkFlowInstanceService(WorkflowExecutionRepository workflowExecutionRepository) {
        this.workflowExecutionRepository = workflowExecutionRepository;
    }

    public Page<WorkflowInstanceDto> getRunningWorkflows(
            Pageable pageable,
            String workflowId,
            String businessDate,   // may be null or ""
            String initiatedBy     // may be null or ""
    ) {
        LocalDate businessDateFilter = parseBusinessDateOrNull(businessDate);
        String initiatedByFilter = emptyToNull(initiatedBy);

        return workflowExecutionRepository.findRunningWorkflows(
                pageable,
                emptyToNull(workflowId),
                businessDateFilter,
                initiatedByFilter
        );
    }

    private static LocalDate parseBusinessDateOrNull(String value) {
        if (value == null) return null;
        String trimmed = value.trim();
        if (trimmed.isEmpty()) return null;

        try {
            // expects ISO yyyy-MM-dd (e.g., 2025-08-22)
            return LocalDate.parse(trimmed, DateTimeFormatter.ISO_LOCAL_DATE);
        } catch (DateTimeParseException ex) {
            throw new IllegalArgumentException(
                "businessDate must be in yyyy-MM-dd format. Received: " + value);
        }
    }

    private static String emptyToNull(String s) {
        return (s == null || s.trim().isEmpty()) ? null : s.trim();
    }
}